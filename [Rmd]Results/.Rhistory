for(i in 1:length(data$event)){
if (length(data[["indices"]][[i]]) != 0){
indices = rbind(indices, matrix(data[["indices"]][[i]])-4000 )
events = rbind(events, matrix(data[["event"]][[i]]))
sub = rbind(sub,matrix(rep(data$sub[i],length(data[["indices"]][[i]]))))
responses = rbind(responses,matrix(rep(data$responses[i],length(data[["indices"]][[i]]))))
numOfTrial = rbind(numOfTrial,matrix(rep(data$numOfTrial[i],length(data[["indices"]][[i]]))))
}
}
ind_data_e2_raster = data.frame(
sub = sub,
numOfSwitch = responses,
indices = indices,
events = g1[events+1],
numOfTrial = numOfTrial,
exp = 'Exp2'
)
ind_data_e2 = data.frame(
sub = rep(data$sub,2),
numOfSwitch = rep(data$responses,2),
data_y = c(data$dilation_time,data$constriction_time),
data_y_bef2s_0s = c(data$dilation_time_bef2s_0s,data$constriction_time_bef2s_0s),
data_y_bef1s_0s = c(data$dilation_time_bef1s_0s,data$constriction_time_time_bef1s_0s),
data_y_bef2s_1s = c(data$dilation_time_bef2s_1s,data$constriction_time_bef2s_1s),
events = rep(c('dilation','constriction'),times=c(length(data$sub),length(data$sub))),
# baseline = data$Baseline,
exp = 'Exp2'
)
numOfSub_e2 = length(unique(ind_data_e2$sub))
# ####### Figure 5A(raster) #####
ind_data_raster = rbind(ind_data_e1_raster,ind_data_e2_raster)
# raster plot -----------------------------------------------------------------
p = ggplot(ind_data_raster,aes(x = indices, y = numOfTrial,group=events,color=events))+
geom_point(shape=16,alpha=0.4,size=1)+
scale_color_manual(values = c('gray80','black'))+
facet_grid(numOfSwitch ~ exp )
config = list(alpha = 0.4,
stride = 0.1,
label_x = "",
label_y = "# of PD events",
title = "")
# config$ylim = round(seq(0,2000,500),2)
# config$ylim_stride = 100
# config$xlim = round(seq(-2000,4000,1000),2)
# config$xlim_stride = 100
#
# p = setEmptyStyle(p,config)
p = p +
scale_x_continuous(breaks=round(seq(-4000,4000,1000),2),labels=round(seq(-4,4,1),2))+
xlab('Time[sec]')+ ylab('# trial')+
coord_cartesian(xlim=c(-2100,4000),expand=FALSE)
eval(parse(text=paste("p", countFigNum ,"=p", sep="")))
countFigNum = countFigNum+1
# Average -----------------------------------------------------------------
ind_data = rbind(ind_data_e1,ind_data_e2)
ind_data$numOfSwitch = g3[as.integer(ind_data$numOfSwitch)+1]
# ind_data = ind_data[,c(1,2,4,6,5,3)]
ind_data = ind_data[,c(1,2,4,5,3)]
ind_data$numOfSwitch = factor(ind_data$numOfSwitch,c('unswitch','switch'))
# baseline PD corr. -----------------------------------------------------------------
# config$label_y = 'Baseline pupil size [mm]'
# config$label_x = 'number of PD events'
# t = aggregate( baseline ~ sub*data_y, data =ind_data[ind_data$events == 'dilation',], FUN = "mean")
# t$numEvents = t$data_y
# t$numEvents = factor(t$numEvents,levels=unique(t$numEvents))
# t$data_y = t$baseline
# t$baseline = NULL
# t = t[,c(1,3,2)]
#
# anovakun(t,"sA",long=T, peta=T,gg=T)
#
# p = dispBoxGraph(t,config,c("numEvents"))
#
# config$ylim = round(seq(3.5,7.5,0.5),2)
# config$ylim_stride = 0.05
# config$xlim = round(seq(1,6,1),2)
# config$xlim_stride = 0.5
#
# p = setEmptyStyle(p,config)
#
# eval(parse(text=paste("p", countFigNum ,"=p", sep="")))
# countFigNum = countFigNum+1
# Figure 5B(average -----------------------------------------------------------------
config$label_y = '# of PD events'
config$label_x = ''
data_anovaPD = aggregate( data_y ~ sub*numOfSwitch*exp, data = ind_data[ind_data$events == 'dilation',], FUN = "mean")
View(ind_data_e1)
View(ind_data_e2)
p
p = ggplot(ind_data_raster,aes(x = indices, y = numOfTrial,group=events,color=events))+
geom_point(shape=16,alpha=0.4,size=1)+
scale_color_manual(values = c('gray80','black'))+
facet_grid(numOfSwitch ~ exp )
p
p = p +
scale_x_continuous(breaks=round(seq(-4000,4000,1000),2),labels=round(seq(-4,4,1),2))+
xlab('Time[sec]')+ ylab('# trial')+
coord_cartesian(xlim=c(-2100,4000),expand=FALSE)
p
# Average -----------------------------------------------------------------
ind_data = rbind(ind_data_e1,ind_data_e2)
ind_data$numOfSwitch = g3[as.integer(ind_data$numOfSwitch)+1]
View(ind_data)
ind_data = ind_data[,c(1,2,4,5,3)]
ind_data$numOfSwitch = factor(ind_data$numOfSwitch,c('unswitch','switch'))
ind_data = rbind(ind_data_e1,ind_data_e2)
ind_data$numOfSwitch = g3[as.integer(ind_data$numOfSwitch)+1]
ind_data$numOfSwitch = factor(ind_data$numOfSwitch,c('unswitch','switch'))
# Figure 5B(average -----------------------------------------------------------------
config$label_y = '# of PD events'
config$label_x = ''
ind_data$numOfSwitch = factor(ind_data$numOfSwitch,c('unswitch','switch'))
config$label_y = '# of PD events'
config$label_x = ''
data_anovaPD = aggregate( . ~ sub*numOfSwitch*exp, data = ind_data[ind_data$events == 'dilation',], FUN = "mean")
data_anovaPC = aggregate( . ~ sub*numOfSwitch*exp, data = ind_data[ind_data$events == 'constriction',], FUN = "mean")
View(data_anovaPC)
data_anovaPD = aggregate( data_y ~ sub*numOfSwitch*exp, data = ind_data[ind_data$events == 'dilation',], FUN = "mean")
View(data_anovaPC)
View(data_anovaPD)
View(data_anovaPD)
anovakun(data_anovaPD,"sAB",long=T, peta=T,gg=T)
ind_data = rbind(ind_data_e1,ind_data_e2)
ind_data$numOfSwitch = g3[as.integer(ind_data$numOfSwitch)+1]
# ind_data = ind_data[,c(1,2,4,6,5,3)]
ind_data$numOfSwitch = factor(ind_data$numOfSwitch,c('unswitch','switch'))
data_anovaPD = aggregate( data_y ~ sub*numOfSwitch*exp, data = ind_data[ind_data$events == 'dilation',], FUN = "mean")
data_anovaPC = aggregate( data_y ~ sub*numOfSwitch*exp, data = ind_data[ind_data$events == 'constriction',], FUN = "mean")
View(data_anovaPC)
anovakun(data_anovaPD,"sAB",long=T, peta=T,gg=T)
anovakun(data_anovaPC,"sAB",long=T, peta=T,gg=T)
g2 = c('unswitch','switch')
countFigNum = 1
#### data loading ------------------------------------------------------------
if(mmFlg){
data=fromJSON(file="../[Python]PreProcessing/Exp1/data/PDPCevents_mm.json")
}else if(auFlg){
data=fromJSON(file="../[Python]PreProcessing/Exp1/data/PDPCevents_au.json")
}else{
data=fromJSON(file="../[Python]PreProcessing/Exp1/data/PDPCevents.json")
}
dat <- list(matrix(unlist(data$constriction),nrow=length(data$constriction),byrow=T),
matrix(unlist(data$dilation),nrow=length(data$dilation),byrow=T))
indices = NULL
events = NULL
sub = NULL
numOfSwitch = NULL
numOfTrial = NULL
baseline = NULL
for(i in 1:length(data$event)){
indices = rbind(indices, matrix(data[["indices"]][[i]])-4000 )
events = rbind(events, matrix(data[["event"]][[i]]))
sub = rbind(sub,matrix(rep(data$sub[i],length(data[["indices"]][[i]]))))
numOfSwitch = rbind(numOfSwitch,matrix(rep(data$numOfSwitch[i],length(data[["indices"]][[i]]))))
# baseline = rbind(baseline,matrix(rep(data$Baseline[i],length(data[["indices"]][[i]]))))
numOfTrial = rbind(numOfTrial,matrix(rep(data$numOfTrial[i],length(data[["indices"]][[i]]))))
}
# data$numOfTrial[i]
g1 = c('constriction','dilation')
g2 = c('0','1','2+')
# g2 = c('0','1')
g3 = c('unswitch','switch','switch')
ind_data_e1_raster = data.frame(
sub = sub,
numOfSwitch = numOfSwitch,
indices = indices,
events = g1[events+1],
numOfTrial = numOfTrial,
exp = 'Exp1'
)
ind_data_e1_raster[ind_data_e1_raster$numOfSwitch > length(g2)-2,]$numOfSwitch = length(g2)-1
ind_data_e1_raster$numOfSwitch = g2[ind_data_e1_raster$numOfSwitch+1]
ind_data_e1 = data.frame(
sub = rep(data$sub,2),
numOfSwitch = rep(data$numOfSwitch,2),
data_y = c(data$dilation_time,data$constriction_time),
data_y_bef2s_0s = c(data$dilation_time_bef2s_0s,data$constriction_time_bef2s_0s),
data_y_bef1s_0s = c(data$dilation_time_bef1s_0s,data$constriction_time_time_bef1s_0s),
data_y_bef2s_1s = c(data$dilation_time_bef2s_1s,data$constriction_time_bef2s_1s),
events = rep(c('dilation','constriction'),times=c(length(data$sub),length(data$sub))),
# baseline = data$Baseline,
exp = 'Exp1'
)
ind_data_e1[ind_data_e1$numOfSwitch > length(g2)-2,]$numOfSwitch = length(g2)-1
numOfSub_e1 = length(unique(ind_data_e1$sub))
#### Exp2
if(mmFlg){
data=fromJSON(file="../[Python]PreProcessing/Exp2/data/PDPCevents_mm.json")
}else if(auFlg){
data=fromJSON(file="../[Python]PreProcessing/Exp2/data/PDPCevents_au.json")
}else{
data=fromJSON(file="../[Python]PreProcessing/Exp2/data/PDPCevents.json")
}
dat <- list(matrix(unlist(data$constriction),nrow=length(data$constriction),byrow=T),
matrix(unlist(data$dilation),nrow=length(data$dilation),byrow=T))
indices = NULL
events = NULL
sub = NULL
responses = NULL
numOfTrial = NULL
for(i in 1:length(data$event)){
if (length(data[["indices"]][[i]]) != 0){
indices = rbind(indices, matrix(data[["indices"]][[i]])-4000 )
events = rbind(events, matrix(data[["event"]][[i]]))
sub = rbind(sub,matrix(rep(data$sub[i],length(data[["indices"]][[i]]))))
responses = rbind(responses,matrix(rep(data$responses[i],length(data[["indices"]][[i]]))))
numOfTrial = rbind(numOfTrial,matrix(rep(data$numOfTrial[i],length(data[["indices"]][[i]]))))
}
}
ind_data_e2_raster = data.frame(
sub = sub,
numOfSwitch = responses,
indices = indices,
events = g1[events+1],
numOfTrial = numOfTrial,
exp = 'Exp2'
)
ind_data_e2 = data.frame(
sub = rep(data$sub,2),
numOfSwitch = rep(data$responses,2),
data_y = c(data$dilation_time,data$constriction_time),
data_y_bef2s_0s = c(data$dilation_time_bef2s_0s,data$constriction_time_bef2s_0s),
data_y_bef1s_0s = c(data$dilation_time_bef1s_0s,data$constriction_time_time_bef1s_0s),
data_y_bef2s_1s = c(data$dilation_time_bef2s_1s,data$constriction_time_bef2s_1s),
events = rep(c('dilation','constriction'),times=c(length(data$sub),length(data$sub))),
# baseline = data$Baseline,
exp = 'Exp2'
)
numOfSub_e2 = length(unique(ind_data_e2$sub))
# ####### Figure 5A(raster) #####
ind_data_raster = rbind(ind_data_e1_raster,ind_data_e2_raster)
# raster plot -----------------------------------------------------------------
p = ggplot(ind_data_raster,aes(x = indices, y = numOfTrial,group=events,color=events))+
geom_point(shape=16,alpha=0.4,size=1)+
scale_color_manual(values = c('gray80','black'))+
facet_grid(numOfSwitch ~ exp )
config = list(alpha = 0.4,
stride = 0.1,
label_x = "",
label_y = "# of PD events",
title = "")
# config$ylim = round(seq(0,2000,500),2)
# config$ylim_stride = 100
# config$xlim = round(seq(-2000,4000,1000),2)
# config$xlim_stride = 100
#
# p = setEmptyStyle(p,config)
p = p +
scale_x_continuous(breaks=round(seq(-4000,4000,1000),2),labels=round(seq(-4,4,1),2))+
xlab('Time[sec]')+ ylab('# trial')+
coord_cartesian(xlim=c(-2100,4000),expand=FALSE)
eval(parse(text=paste("p", countFigNum ,"=p", sep="")))
countFigNum = countFigNum+1
# Average -----------------------------------------------------------------
ind_data = rbind(ind_data_e1,ind_data_e2)
ind_data$numOfSwitch = g3[as.integer(ind_data$numOfSwitch)+1]
# ind_data = ind_data[,c(1,2,4,6,5,3)]
ind_data$numOfSwitch = factor(ind_data$numOfSwitch,c('unswitch','switch'))
# baseline PD corr. -----------------------------------------------------------------
# config$label_y = 'Baseline pupil size [mm]'
# config$label_x = 'number of PD events'
# t = aggregate( baseline ~ sub*data_y, data =ind_data[ind_data$events == 'dilation',], FUN = "mean")
# t$numEvents = t$data_y
# t$numEvents = factor(t$numEvents,levels=unique(t$numEvents))
# t$data_y = t$baseline
# t$baseline = NULL
# t = t[,c(1,3,2)]
#
# anovakun(t,"sA",long=T, peta=T,gg=T)
#
# p = dispBoxGraph(t,config,c("numEvents"))
#
# config$ylim = round(seq(3.5,7.5,0.5),2)
# config$ylim_stride = 0.05
# config$xlim = round(seq(1,6,1),2)
# config$xlim_stride = 0.5
#
# p = setEmptyStyle(p,config)
#
# eval(parse(text=paste("p", countFigNum ,"=p", sep="")))
# countFigNum = countFigNum+1
# Figure 5B(average -----------------------------------------------------------------
config$label_y = '# of PD events'
config$label_x = ''
data_anovaPD = aggregate( data_y ~ sub*numOfSwitch*exp, data = ind_data[ind_data$events == 'dilation',], FUN = "mean")
data_anovaPC = aggregate( data_y ~ sub*numOfSwitch*exp, data = ind_data[ind_data$events == 'constriction',], FUN = "mean")
reject = NULL
for(iSub in unique(data_anovaPD$sub)){
if(dim(data_anovaPD[data_anovaPD$sub == iSub,])[1] != 4){
reject = rbind(reject,iSub)
}
}
for(iSub in reject){
data_anovaPD = data_anovaPD[data_anovaPD$sub != iSub,]
data_anovaPC = data_anovaPC[data_anovaPC$sub != iSub,]
}
# ind_data = ind_data[,c(1,2,4,5,3)]
anovakun(data_anovaPD,"sAB",long=T, peta=T,gg=T)
anovakun(data_anovaPC,"sAB",long=T, peta=T,gg=T)
# p = dispLineGraph(data_anovaPD,config,c("exp","numOfSwitch"))+
#   facet_grid(. ~ exp )
p = dispBoxGraph(data_anovaPD,config,c("numOfSwitch","exp"))+
facet_grid(. ~ exp )
config$ylim = round(seq(1,2.5,0.5),2)
config$ylim_stride = 0.05
config$xlim = round(seq(1,2,1),2)
config$xlim_stride = 0.5
# config$ylim = round(seq(0,1,0.25),2)
# config$ylim_stride = 0.02
# config$xlim = round(seq(1,2,1),2)
# config$xlim_stride = 0.5
#
p = setEmptyStyle(p,config)
eval(parse(text=paste("p", countFigNum ,"=p", sep="")))
countFigNum = countFigNum+1
save(data_anovaPD,data_anovaPC,
file = "./data/dataset_figure5_2.rda")
View(ind_data)
View(data_anovaPD)
g2 = c('unswitch','switch')
countFigNum = 1
#### data loading ------------------------------------------------------------
if(mmFlg){
data=fromJSON(file="../[Python]PreProcessing/Exp1/data/PDPCevents_mm.json")
}else if(auFlg){
data=fromJSON(file="../[Python]PreProcessing/Exp1/data/PDPCevents_au.json")
}else{
data=fromJSON(file="../[Python]PreProcessing/Exp1/data/PDPCevents.json")
}
dat <- list(matrix(unlist(data$constriction),nrow=length(data$constriction),byrow=T),
matrix(unlist(data$dilation),nrow=length(data$dilation),byrow=T))
indices = NULL
events = NULL
sub = NULL
numOfSwitch = NULL
numOfTrial = NULL
baseline = NULL
for(i in 1:length(data$event)){
indices = rbind(indices, matrix(data[["indices"]][[i]])-4000 )
events = rbind(events, matrix(data[["event"]][[i]]))
sub = rbind(sub,matrix(rep(data$sub[i],length(data[["indices"]][[i]]))))
numOfSwitch = rbind(numOfSwitch,matrix(rep(data$numOfSwitch[i],length(data[["indices"]][[i]]))))
# baseline = rbind(baseline,matrix(rep(data$Baseline[i],length(data[["indices"]][[i]]))))
numOfTrial = rbind(numOfTrial,matrix(rep(data$numOfTrial[i],length(data[["indices"]][[i]]))))
}
# data$numOfTrial[i]
g1 = c('constriction','dilation')
g2 = c('0','1','2+')
# g2 = c('0','1')
g3 = c('unswitch','switch','switch')
ind_data_e1_raster = data.frame(
sub = sub,
numOfSwitch = numOfSwitch,
indices = indices,
events = g1[events+1],
numOfTrial = numOfTrial,
exp = 'Exp1'
)
ind_data_e1_raster[ind_data_e1_raster$numOfSwitch > length(g2)-2,]$numOfSwitch = length(g2)-1
ind_data_e1_raster$numOfSwitch = g2[ind_data_e1_raster$numOfSwitch+1]
ind_data_e1 = data.frame(
sub = rep(data$sub,2),
numOfSwitch = rep(data$numOfSwitch,2),
data_y = c(data$dilation_time,data$constriction_time),
data_y_bef2s_0s = c(data$dilation_time_bef2s_0s,data$constriction_time_bef2s_0s),
data_y_bef1s_0s = c(data$dilation_time_bef1s_0s,data$constriction_time_time_bef1s_0s),
data_y_bef2s_1s = c(data$dilation_time_bef2s_1s,data$constriction_time_bef2s_1s),
events = rep(c('dilation','constriction'),times=c(length(data$sub),length(data$sub))),
# baseline = data$Baseline,
exp = 'Exp1'
)
ind_data_e1[ind_data_e1$numOfSwitch > length(g2)-2,]$numOfSwitch = length(g2)-1
numOfSub_e1 = length(unique(ind_data_e1$sub))
#### Exp2
if(mmFlg){
data=fromJSON(file="../[Python]PreProcessing/Exp2/data/PDPCevents_mm.json")
}else if(auFlg){
data=fromJSON(file="../[Python]PreProcessing/Exp2/data/PDPCevents_au.json")
}else{
data=fromJSON(file="../[Python]PreProcessing/Exp2/data/PDPCevents.json")
}
dat <- list(matrix(unlist(data$constriction),nrow=length(data$constriction),byrow=T),
matrix(unlist(data$dilation),nrow=length(data$dilation),byrow=T))
indices = NULL
events = NULL
sub = NULL
responses = NULL
numOfTrial = NULL
for(i in 1:length(data$event)){
if (length(data[["indices"]][[i]]) != 0){
indices = rbind(indices, matrix(data[["indices"]][[i]])-4000 )
events = rbind(events, matrix(data[["event"]][[i]]))
sub = rbind(sub,matrix(rep(data$sub[i],length(data[["indices"]][[i]]))))
responses = rbind(responses,matrix(rep(data$responses[i],length(data[["indices"]][[i]]))))
numOfTrial = rbind(numOfTrial,matrix(rep(data$numOfTrial[i],length(data[["indices"]][[i]]))))
}
}
ind_data_e2_raster = data.frame(
sub = sub,
numOfSwitch = responses,
indices = indices,
events = g1[events+1],
numOfTrial = numOfTrial,
exp = 'Exp2'
)
ind_data_e2 = data.frame(
sub = rep(data$sub,2),
numOfSwitch = rep(data$responses,2),
data_y = c(data$dilation_time,data$constriction_time),
data_y_bef2s_0s = c(data$dilation_time_bef2s_0s,data$constriction_time_bef2s_0s),
data_y_bef1s_0s = c(data$dilation_time_bef1s_0s,data$constriction_time_time_bef1s_0s),
data_y_bef2s_1s = c(data$dilation_time_bef2s_1s,data$constriction_time_bef2s_1s),
events = rep(c('dilation','constriction'),times=c(length(data$sub),length(data$sub))),
# baseline = data$Baseline,
exp = 'Exp2'
)
numOfSub_e2 = length(unique(ind_data_e2$sub))
# ####### Figure 5A(raster) #####
ind_data_raster = rbind(ind_data_e1_raster,ind_data_e2_raster)
# raster plot -----------------------------------------------------------------
p = ggplot(ind_data_raster,aes(x = indices, y = numOfTrial,group=events,color=events))+
geom_point(shape=16,alpha=0.4,size=1)+
scale_color_manual(values = c('gray80','black'))+
facet_grid(numOfSwitch ~ exp )
config = list(alpha = 0.4,
stride = 0.1,
label_x = "",
label_y = "# of PD events",
title = "")
# config$ylim = round(seq(0,2000,500),2)
# config$ylim_stride = 100
# config$xlim = round(seq(-2000,4000,1000),2)
# config$xlim_stride = 100
#
# p = setEmptyStyle(p,config)
p = p +
scale_x_continuous(breaks=round(seq(-4000,4000,1000),2),labels=round(seq(-4,4,1),2))+
xlab('Time[sec]')+ ylab('# trial')+
coord_cartesian(xlim=c(-2100,4000),expand=FALSE)
eval(parse(text=paste("p", countFigNum ,"=p", sep="")))
countFigNum = countFigNum+1
# Average -----------------------------------------------------------------
ind_data = rbind(ind_data_e1,ind_data_e2)
ind_data$numOfSwitch = g3[as.integer(ind_data$numOfSwitch)+1]
# ind_data = ind_data[,c(1,2,4,6,5,3)]
ind_data$numOfSwitch = factor(ind_data$numOfSwitch,c('unswitch','switch'))
# baseline PD corr. -----------------------------------------------------------------
# config$label_y = 'Baseline pupil size [mm]'
# config$label_x = 'number of PD events'
# t = aggregate( baseline ~ sub*data_y, data =ind_data[ind_data$events == 'dilation',], FUN = "mean")
# t$numEvents = t$data_y
# t$numEvents = factor(t$numEvents,levels=unique(t$numEvents))
# t$data_y = t$baseline
# t$baseline = NULL
# t = t[,c(1,3,2)]
#
# anovakun(t,"sA",long=T, peta=T,gg=T)
#
# p = dispBoxGraph(t,config,c("numEvents"))
#
# config$ylim = round(seq(3.5,7.5,0.5),2)
# config$ylim_stride = 0.05
# config$xlim = round(seq(1,6,1),2)
# config$xlim_stride = 0.5
#
# p = setEmptyStyle(p,config)
#
# eval(parse(text=paste("p", countFigNum ,"=p", sep="")))
# countFigNum = countFigNum+1
# Figure 5B(average -----------------------------------------------------------------
config$label_y = '# of PD events'
config$label_x = ''
ind_data$data_y = ind_data$data_y_bef2s_0s
data_anovaPD = aggregate( data_y ~ sub*numOfSwitch*exp, data = ind_data[ind_data$events == 'dilation',], FUN = "mean")
data_anovaPC = aggregate( data_y ~ sub*numOfSwitch*exp, data = ind_data[ind_data$events == 'constriction',], FUN = "mean")
reject = NULL
for(iSub in unique(data_anovaPD$sub)){
if(dim(data_anovaPD[data_anovaPD$sub == iSub,])[1] != 4){
reject = rbind(reject,iSub)
}
}
for(iSub in reject){
data_anovaPD = data_anovaPD[data_anovaPD$sub != iSub,]
data_anovaPC = data_anovaPC[data_anovaPC$sub != iSub,]
}
# ind_data = ind_data[,c(1,2,4,5,3)]
anovakun(data_anovaPD,"sAB",long=T, peta=T,gg=T)
anovakun(data_anovaPC,"sAB",long=T, peta=T,gg=T)
# p = dispLineGraph(data_anovaPD,config,c("exp","numOfSwitch"))+
#   facet_grid(. ~ exp )
p = dispBoxGraph(data_anovaPD,config,c("numOfSwitch","exp"))+
facet_grid(. ~ exp )
config$ylim = round(seq(1,2.5,0.5),2)
config$ylim_stride = 0.05
config$xlim = round(seq(1,2,1),2)
config$xlim_stride = 0.5
# config$ylim = round(seq(0,1,0.25),2)
# config$ylim_stride = 0.02
# config$xlim = round(seq(1,2,1),2)
# config$xlim_stride = 0.5
#
p = setEmptyStyle(p,config)
eval(parse(text=paste("p", countFigNum ,"=p", sep="")))
countFigNum = countFigNum+1
save(data_anovaPD,data_anovaPC,
file = "./data/dataset_figure5_2.rda")
p1
p2
p = dispBoxGraph(data_anovaPD,config,c("numOfSwitch","exp"))+
facet_grid(. ~ exp )
p
anovakun(data_anovaPD,"sAB",long=T, peta=T,gg=T)
